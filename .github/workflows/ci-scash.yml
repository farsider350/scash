name: Continuous Integration For SCash
on:
  push:
    branches:
    - dev
    - master
    - scash_master
  pull_request:
    branches:
    - dev
    - master
    - scash_master
env:
  SOURCE_ARTIFACT: source
jobs:
  create-source-distribution:
    name: Create Source Distribution
    runs-on: ubuntu-22.04
    env:
      ARTIFACT_DIR: source
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Required Packages
      run: |
        sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 autoconf-archive
        sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev
        sudo apt-get install libboost-all-dev libuv openssl
        sudo apt-get install software-properties-common
        sudo apt-get install libdb5.3-dev libdb5.3++-dev
        sudo apt-get update
        sudo apt-get install libminiupnpc-dev
        sudo apt-get install libzmq3-dev
        sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler
        sudo apt-get install libqrencode-dev
    - name: Create Distribution Tarball
      run: |
        ./autogen.sh
        ./configure
        make dist
    - name: Download Dependencies
      run: make -C depends download
    - name: Create Dependencies Tarball
      run: tar -czf depends.tar.gz depends
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv depends.tar.gz scash-*.tar.gz $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
        path: ${{ env.ARTIFACT_DIR }}
  build-linux-22:
    name: Build for Linux 22
    needs: create-source-distribution
    runs-on: ubuntu-22.04
    env:
      ARTIFACT_DIR: linux-ubu22-binaries
      TEST_LOG_ARTIFACT_DIR: test-logs
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf depends.tar.gz
        tar -xzf scash-*.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-zmq
    - name: Build Dependencies
      run: make -C depends -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Build scash
      run: |
        ./configure --prefix=$(realpath depends/x86_64-pc-linux-gnu)
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{scash-cli,scash-tx,scashd,qt/scash-qt} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: linux-ubu22-binaries
        path: ${{ env.ARTIFACT_DIR }}
  build-linux-20:
    name: Build for Linux 20
    needs: create-source-distribution
    runs-on: ubuntu-20.04
    env:
      ARTIFACT_DIR: linux-ubu20-binaries
      TEST_LOG_ARTIFACT_DIR: test-logs
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf depends.tar.gz
        tar -xzf scash-*.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-zmq
    - name: Build Dependencies
      run: make -C depends -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Build scash
      run: |
        ./configure --prefix=$(realpath depends/x86_64-pc-linux-gnu)
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{scash-cli,scash-tx,scashd,qt/scash-qt} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: linux-ubu20-binaries
        path: ${{ env.ARTIFACT_DIR }}
  build-windows:
    name: Build for Windows
    needs: create-source-distribution
    runs-on: ubuntu-22.04
    env:
      ARTIFACT_DIR: windows-binaries
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf depends.tar.gz
        tar -xzf scash-*.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64
    - name: Switch MinGW GCC and G++ to POSIX Threading
      run: |
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build Dependencies
      run: make -C depends -j$(nproc) HOST=x86_64-w64-mingw32
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Build scash
      run: |
        ./configure --prefix=$(realpath depends/x86_64-w64-mingw32)
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{scash-cli.exe,scash-tx.exe,scashd.exe,qt/scash-qt.exe} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: windows-binaries
        path: ${{ env.ARTIFACT_DIR }}
          make clean
          make -j $(nproc) check
          ./test/functional/test_runner.py -j $(nproc) --extended
